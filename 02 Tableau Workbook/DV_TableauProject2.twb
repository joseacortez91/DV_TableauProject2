<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='HOSPITAL (C##CS329E_JAC5699)' inline='true' name='oracle.42104.575360914400' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JAC5699' server='129.152.144.84' service='orcl.usuniversi01134.oraclecloud.internal' username='C##cs329e_jac5699'>
        <relation name='HOSPITAL' table='[C##CS329E_JAC5699].[HOSPITAL]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DRG_DEFINITION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DRG_DEFINITION]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>DRG_DEFINITION</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_ID]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_NAME]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STREET_ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STREET_ADDRESS]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_STREET_ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_CITY]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STATE]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ZIP_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_ZIP_CODE]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_ZIP_CODE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_DISCHARGES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TOTAL_DISCHARGES]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>TOTAL_DISCHARGES</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_COVERED_CHARGES</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AVERAGE_COVERED_CHARGES]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>AVERAGE_COVERED_CHARGES</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_TOTAL_PAYMENTS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AVERAGE_TOTAL_PAYMENTS]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>AVERAGE_TOTAL_PAYMENTS</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_MEDICARE_PAYMENTS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AVERAGE_MEDICARE_PAYMENTS]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>AVERAGE_MEDICARE_PAYMENTS</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Covered Charges' datatype='real' name='[AVERAGE_COVERED_CHARGES]' role='measure' type='quantitative'>
      </column>
      <column caption='Average Medicare Payments' datatype='real' name='[AVERAGE_MEDICARE_PAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='Average Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='MAX_TOTAL_PAYMENTS' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='TOTAL_PAYMENTS_DIFF' datatype='real' name='[Calculation_1570410184817995]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX(ZN(SUM([AVERAGE_TOTAL_PAYMENTS])))-ZN(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Drg Definition' datatype='string' name='[DRG_DEFINITION]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Provider Id' datatype='string' name='[PROVIDER_ID]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Name' datatype='string' name='[PROVIDER_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column caption='Provider Street Address' datatype='string' name='[PROVIDER_STREET_ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Zip Code' datatype='string' name='[PROVIDER_ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
      </column>
      <column caption='Total Discharges' datatype='real' name='[TOTAL_DISCHARGES]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='HOSPITAL (C##CS329E_JAC5699) (2)' inline='true' name='oracle.42104.575360914400 (copy)' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JAC5699' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jac5699'>
        <relation name='HOSPITAL' table='[C##CS329E_JAC5699].[HOSPITAL]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DRG_DEFINITION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DRG_DEFINITION]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>DRG_DEFINITION</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_ID]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_NAME]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STREET_ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STREET_ADDRESS]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_STREET_ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_CITY]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_STATE]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROVIDER_ZIP_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROVIDER_ZIP_CODE]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>PROVIDER_ZIP_CODE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>2000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOTAL_DISCHARGES</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TOTAL_DISCHARGES]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>TOTAL_DISCHARGES</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_COVERED_CHARGES</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AVERAGE_COVERED_CHARGES]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>AVERAGE_COVERED_CHARGES</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_TOTAL_PAYMENTS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AVERAGE_TOTAL_PAYMENTS]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>AVERAGE_TOTAL_PAYMENTS</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_MEDICARE_PAYMENTS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AVERAGE_MEDICARE_PAYMENTS]</local-name>
            <parent-name>[HOSPITAL]</parent-name>
            <remote-alias>AVERAGE_MEDICARE_PAYMENTS</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>126</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Covered Charges' datatype='real' name='[AVERAGE_COVERED_CHARGES]' role='measure' type='quantitative'>
      </column>
      <column caption='Average Medicare Payments' datatype='real' name='[AVERAGE_MEDICARE_PAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='Average Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
      </column>
      <column caption='Drg Definition' datatype='string' name='[DRG_DEFINITION]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Provider Id' datatype='string' name='[PROVIDER_ID]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Name' datatype='string' name='[PROVIDER_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column caption='Provider Street Address' datatype='string' name='[PROVIDER_STREET_ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Provider Zip Code' datatype='string' name='[PROVIDER_ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
      </column>
      <column caption='Total Discharges' datatype='real' name='[TOTAL_DISCHARGES]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='cume_dist'>
      <table>
        <view>
          <datasources>
            <datasource caption='HOSPITAL (C##CS329E_JAC5699) (2)' name='oracle.42104.575360914400 (copy)' />
          </datasources>
          <datasource-dependencies datasource='oracle.42104.575360914400 (copy)'>
            <column caption='Average Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Drg Definition' datatype='string' name='[DRG_DEFINITION]' role='dimension' type='nominal'>
            </column>
            <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Provider Name' datatype='string' name='[PROVIDER_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='None' name='[none:AVERAGE_TOTAL_PAYMENTS:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DRG_DEFINITION]' derivation='None' name='[none:DRG_DEFINITION:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_CITY]' derivation='None' name='[none:PROVIDER_CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_NAME]' derivation='None' name='[none:PROVIDER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='Sum' name='[pcrk:sum:AVERAGE_TOTAL_PAYMENTS:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' rank-options='Competition,Ascending' type='PctRank'>
                <order field='[oracle.42104.575360914400 (copy)].[AVERAGE_TOTAL_PAYMENTS]' />
                <order field='[oracle.42104.575360914400 (copy)].[PROVIDER_NAME]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <sort class='manual' column='[oracle.42104.575360914400 (copy)].[none:AVERAGE_TOTAL_PAYMENTS:ok]' direction='ASC'>
            <dictionary>
              <bucket>5155.7299999999996</bucket>
              <bucket>5602.1999999999998</bucket>
              <bucket>5739.5699999999997</bucket>
              <bucket>6104.0799999999999</bucket>
              <bucket>6107.5200000000004</bucket>
              <bucket>6783.0100000000002</bucket>
              <bucket>7395.4200000000001</bucket>
              <bucket>11971.620000000001</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[oracle.42104.575360914400 (copy)].[none:DRG_DEFINITION:nk]'>
            <groupfilter function='member' level='[none:DRG_DEFINITION:nk]' member='&quot;885 - PSYCHOSES&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.42104.575360914400 (copy)].[none:PROVIDER_CITY:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;AUSTIN&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;COLLEGE STATION&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;DALLAS&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;ROUND ROCK&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;SAN ANTONIO&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;WACO&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[oracle.42104.575360914400 (copy)].[none:PROVIDER_NAME:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SETON MEDICAL CENTER AUSTIN&quot;</bucket>
              <bucket>&quot;MEDICAL CITY DALLAS HOSPITAL&quot;</bucket>
              <bucket>&quot;TEXAS HEALTH PRESBYTERIAN HOSPITAL  DALLAS&quot;</bucket>
              <bucket>&quot;BAPTIST MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;METHODIST HOSPITAL&quot;</bucket>
              <bucket>&quot;NIX HEALTH CARE SYSTEM&quot;</bucket>
              <bucket>&quot;SOUTHWEST GENERAL HOSPITAL&quot;</bucket>
              <bucket>&quot;UNIVERSITY HEALTH SYSTEM&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[oracle.42104.575360914400 (copy)].[none:PROVIDER_STATE:nk]'>
            <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;TX&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.42104.575360914400 (copy)].[none:PROVIDER_STATE:nk]</column>
            <column>[oracle.42104.575360914400 (copy)].[none:PROVIDER_CITY:nk]</column>
            <column>[oracle.42104.575360914400 (copy)].[none:DRG_DEFINITION:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[oracle.42104.575360914400 (copy)].[pcrk:sum:AVERAGE_TOTAL_PAYMENTS:qk:7]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.42104.575360914400 (copy)].[none:PROVIDER_NAME:nk] / ([oracle.42104.575360914400 (copy)].[none:PROVIDER_CITY:nk] / [oracle.42104.575360914400 (copy)].[none:AVERAGE_TOTAL_PAYMENTS:ok]))</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='max_and_diff'>
      <table>
        <view>
          <datasources>
            <datasource caption='HOSPITAL (C##CS329E_JAC5699)' name='oracle.42104.575360914400' />
          </datasources>
          <datasource-dependencies datasource='oracle.42104.575360914400'>
            <column caption='Average Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='MAX_TOTAL_PAYMENTS' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='TOTAL_PAYMENTS_DIFF' datatype='real' name='[Calculation_1570410184817995]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX(ZN(SUM([AVERAGE_TOTAL_PAYMENTS])))-ZN(SUM([AVERAGE_TOTAL_PAYMENTS]))' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column caption='Provider Zip Code' datatype='string' name='[PROVIDER_ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='None' name='[none:AVERAGE_TOTAL_PAYMENTS:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_ZIP_CODE]' derivation='None' name='[none:PROVIDER_ZIP_CODE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[oracle.42104.575360914400].[PROVIDER_STATE]' />
                <order field='[oracle.42104.575360914400].[AVERAGE_TOTAL_PAYMENTS]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1570410184817995]' derivation='User' name='[usr:Calculation_1570410184817995:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[oracle.42104.575360914400].[AVERAGE_TOTAL_PAYMENTS]' />
                <order field='[oracle.42104.575360914400].[PROVIDER_STATE]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42104.575360914400].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42104.575360914400].[usr:Calculation1:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42104.575360914400].[usr:Calculation_1570410184817995:qk:4]&quot;' />
            </groupfilter>
          </filter>
          <sort class='natural' column='[oracle.42104.575360914400].[none:AVERAGE_TOTAL_PAYMENTS:ok]' direction='DESC' />
          <filter class='categorical' column='[oracle.42104.575360914400].[none:PROVIDER_STATE:nk]'>
            <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;TX&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.42104.575360914400].[none:PROVIDER_STATE:nk]</column>
            <column>[oracle.42104.575360914400].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[oracle.42104.575360914400].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.42104.575360914400].[none:PROVIDER_STATE:nk] / ([oracle.42104.575360914400].[none:PROVIDER_ZIP_CODE:nk] / [oracle.42104.575360914400].[none:AVERAGE_TOTAL_PAYMENTS:ok]))</rows>
        <cols>[oracle.42104.575360914400].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='HOSPITAL (C##CS329E_JAC5699) (2)' name='oracle.42104.575360914400 (copy)' />
          </datasources>
          <datasource-dependencies datasource='oracle.42104.575360914400 (copy)'>
            <column caption='Average Total Payments' datatype='real' name='[AVERAGE_TOTAL_PAYMENTS]' role='measure' type='quantitative'>
            </column>
            <column caption='Drg Definition' datatype='string' name='[DRG_DEFINITION]' role='dimension' type='nominal'>
            </column>
            <column caption='Provider City' datatype='string' name='[PROVIDER_CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Provider Name' datatype='string' name='[PROVIDER_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Provider State' datatype='string' name='[PROVIDER_STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='None' name='[none:AVERAGE_TOTAL_PAYMENTS:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DRG_DEFINITION]' derivation='None' name='[none:DRG_DEFINITION:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_CITY]' derivation='None' name='[none:PROVIDER_CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_NAME]' derivation='None' name='[none:PROVIDER_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[PROVIDER_STATE]' derivation='None' name='[none:PROVIDER_STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[AVERAGE_TOTAL_PAYMENTS]' derivation='Sum' name='[rank:sum:AVERAGE_TOTAL_PAYMENTS:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' rank-options='Unique,Ascending' type='Rank' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42104.575360914400 (copy)].[none:DRG_DEFINITION:nk]'>
            <groupfilter function='member' level='[none:DRG_DEFINITION:nk]' member='&quot;313 - CHEST PAIN&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[oracle.42104.575360914400 (copy)].[none:PROVIDER_CITY:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;AUSTIN&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;COLLEGE STATION&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;DALLAS&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;ROUND ROCK&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;SAN ANTONIO&quot;' />
              <groupfilter function='member' level='[none:PROVIDER_CITY:nk]' member='&quot;WACO&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[oracle.42104.575360914400 (copy)].[none:PROVIDER_NAME:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;PROVIDENCE HEALTH CENTER&quot;</bucket>
              <bucket>&quot;SETON MEDICAL CENTER WILLIAMSON&quot;</bucket>
              <bucket>&quot;DOCTORS HOSPITAL&quot;</bucket>
              <bucket>&quot;METHODIST STONE OAK HOSPITAL&quot;</bucket>
              <bucket>&quot;ROUND ROCK MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;SETON  NORTHWEST HOSPITAL&quot;</bucket>
              <bucket>&quot;ST DAVIDS SOUTH AUSTIN MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;SETON MEDICAL CENTER AUSTIN&quot;</bucket>
              <bucket>&quot;NORTH AUSTIN MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;COLLEGE STATION MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;BAPTIST MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;METHODIST HOSPITAL&quot;</bucket>
              <bucket>&quot;TEXAS HEALTH PRESBYTERIAN HOSPITAL  DALLAS&quot;</bucket>
              <bucket>&quot;HILLCREST BAPTIST MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;METHODIST CHARLTON MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;MEDICAL CITY DALLAS HOSPITAL&quot;</bucket>
              <bucket>&quot;ST DAVIDS MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;UT SOUTHWESTERN UNIVERSITY HOSPITAL&quot;</bucket>
              <bucket>&quot;SOUTH HAMPTON COMMUNITY HOSPITAL&quot;</bucket>
              <bucket>&quot;BAYLOR UNIVERSITY MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;SOUTHWEST GENERAL HOSPITAL&quot;</bucket>
              <bucket>&quot;UNIVERSITY MEDICAL CENTER AT BRACKENRIDGE&quot;</bucket>
              <bucket>&quot;CHRISTUS SANTA ROSA HOSPITAL&quot;</bucket>
              <bucket>&quot;METHODIST DALLAS MEDICAL CENTER&quot;</bucket>
              <bucket>&quot;PARKLAND HEALTH AND HOSPITAL SYSTEM&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[oracle.42104.575360914400 (copy)].[none:PROVIDER_STATE:nk]'>
            <groupfilter function='member' level='[none:PROVIDER_STATE:nk]' member='&quot;TX&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.42104.575360914400 (copy)].[none:PROVIDER_STATE:nk]</column>
            <column>[oracle.42104.575360914400 (copy)].[none:PROVIDER_CITY:nk]</column>
            <column>[oracle.42104.575360914400 (copy)].[none:DRG_DEFINITION:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[oracle.42104.575360914400 (copy)].[rank:sum:AVERAGE_TOTAL_PAYMENTS:qk:5]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.42104.575360914400 (copy)].[none:PROVIDER_NAME:nk] / ([oracle.42104.575360914400 (copy)].[none:PROVIDER_CITY:nk] / [oracle.42104.575360914400 (copy)].[none:AVERAGE_TOTAL_PAYMENTS:ok]))</rows>
        <cols></cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='max_and_diff'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42104.575360914400].[none:PROVIDER_STATE:nk]</field>
          <field>[oracle.42104.575360914400].[none:PROVIDER_ZIP_CODE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42104.575360914400 (copy)].[none:AVERAGE_TOTAL_PAYMENTS:ok]</field>
          <field>[oracle.42104.575360914400 (copy)].[none:DRG_DEFINITION:nk]</field>
          <field>[oracle.42104.575360914400 (copy)].[none:PROVIDER_CITY:nk]</field>
          <field>[oracle.42104.575360914400 (copy)].[none:PROVIDER_NAME:nk]</field>
          <field>[oracle.42104.575360914400 (copy)].[none:PROVIDER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='cume_dist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42104.575360914400 (copy)].[none:AVERAGE_TOTAL_PAYMENTS:ok]</field>
          <field>[oracle.42104.575360914400 (copy)].[none:DRG_DEFINITION:nk]</field>
          <field>[oracle.42104.575360914400 (copy)].[none:PROVIDER_CITY:nk]</field>
          <field>[oracle.42104.575360914400 (copy)].[none:PROVIDER_NAME:nk]</field>
          <field>[oracle.42104.575360914400 (copy)].[none:PROVIDER_STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='max_and_diff' width='192'>
      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
      /Ts5t97BOJYjwwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='rank' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='cume_dist' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
